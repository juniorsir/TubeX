# This workflow is for Continuous Integration (CI).
# It runs on every push and pull request to automatically check code quality.
name: TubeZ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint:
    name: Lint Code with Flake8
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code so the action can access it.
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set up the Python version.
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Step 3: Install dependencies.
    # We install flake8 for linting and then install our actual project
    # in editable mode to pull in all its dependencies (Flask, etc.).
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -e .

    # Step 4: Run the linter.
    # This checks for common Python errors and style issues.
    # The --exit-zero flag means it will report errors but won't fail the build,
    # which is good to have while you're actively developing.
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src/tubez/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src/tubez/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

# Note: The 'Test with pytest' step has been removed because no tests are configured.
# When you add tests in the future, you can add a new job for them.
